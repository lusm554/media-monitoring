services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: ['python3', 'backend.py']
    environment:
      - BOT_TOKEN=1
    depends_on:
      db:
        condition:
          service_healthy
    volumes:
      - ./shared:/shared

  redis:
    image: redis
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    command: ["redis-server", "--appendonly", "no", "--maxmemory", "150mb", "--maxmemory-policy", "allkeys-lru"]
    volumes:
      - ./shared/redis:/data
    ports:
      - 6379:6379
    expose:
      - 6379

  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_PASSWORD=
      - POSTGRES_DB=test
    volumes:
      - ./shared/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 3

  pgbackups:
    image: prodrigestivill/postgres-backup-local
    restart: always
    user: postgres:postgres
    volumes:
      - ./shared/pgbackups:/backups
    links:
      - db
    depends_on:
      - db
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=test
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=
      - POSTGRES_EXTRA_OPTS=-Z1 --schema=public --blobs
      - SCHEDULE=@every 1h00m00s
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=8080

volumes:
  shared:
